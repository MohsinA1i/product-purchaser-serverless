# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Purchases products on select sites.

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# Shared configuration for all resources, more in
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    # The PermissionsBoundary allows users to safely develop with their function's permissions constrained
    # to their current application. All the functions and roles in this application have to include it and
    # it has to be manually updated when you add resources to your application.
    # More information in https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html
    PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary'
    Runtime: nodejs12.x

Parameters:
  AppId:
    Type: String

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  UsersTable:
    Type: 'AWS::Serverless::SimpleTable'
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  TestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/test/
      Handler: test.handler
      MemorySize: 128
      Timeout: 30
      Runtime: nodejs12.x
      Description: Facilitates testing.
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable
      Layers:
        - !Ref EssentialsLayer
      Environment: 
        Variables: 
          TABLE_NAME: !Ref UsersTable

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/register/
      Handler: register.handler
      MemorySize: 128
      Timeout: 1
      Runtime: nodejs12.x
      Description: Adds new users to database.
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable
      Layers:
        - !Ref EssentialsLayer
      Environment: 
        Variables: 
          TABLE_NAME: !Ref UsersTable

  TaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/task/
      Handler: task.handler
      MemorySize: 768
      Timeout: 180
      Runtime: nodejs12.x
      Description: Performs actions on stores.
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Layers:
        - !Ref EssentialsLayer
      Environment: 
        Variables: 
          TABLE_NAME: !Ref UsersTable

  EssentialsLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        LayerName: EssentialsLayer
        Description: Essential Dependencies
        ContentUri: layers/essentials/
        CompatibleRuntimes:
          - nodejs12.x
      Metadata:
        BuildMethod: nodejs12.x
          
